{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am a function');\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap)); // updateCollections(collectionsMap);\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Volumes/T7/Software Development/Work/React Course/E-commerce/e-commerce/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","fetchCollectionsAsync","console","log","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAN;AACA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAML,SAAS,CAACC,eAAe,CAACK,uBAAjB,EAA0CJ,qBAA1C,CAAf;AACA;AAED,OAAO,MAAMK,0BAA0B,GAAG,MAAM;AAC/C,SAAQC,QAAD,IAAc;AACpB,UAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AACAH,IAAAA,QAAQ,CAACH,qBAAqB,EAAtB,CAAR;AAEAI,IAAAA,aAAa,CACXG,GADF,GAEEC,IAFF,CAEQC,QAAD,IAAc;AACnB,YAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD;AACAN,MAAAA,QAAQ,CAACS,uBAAuB,CAACF,cAAD,CAAxB,CAAR,CAFmB,CAGnB;AACA,KANF,EAOEG,KAPF,CAOSC,KAAD,IAAWX,QAAQ,CAACY,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAP3B;AAQA,GAZD;AAaA,CAdM","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n\tyield console.log('I am a function');\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n\nexport const fetchCollectionsStartAsync = () => {\n\treturn (dispatch) => {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tdispatch(fetchCollectionsStart());\n\n\t\tcollectionRef\n\t\t\t.get()\n\t\t\t.then((snapshot) => {\n\t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n\t\t\t\t// updateCollections(collectionsMap);\n\t\t\t})\n\t\t\t.catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/T7/Software Development/Work/React Course/E-commerce/e-commerce/client/src/components/sign-in/sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: handleChange,\n        value: email,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" Sign in \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SignIn, \"D045XLO0s7F/D7nDnuBmlfdiLEY=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Volumes/T7/Software Development/Work/React Course/E-commerce/e-commerce/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD;AAEA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,mBAAvC,QAAkE,kBAAlE;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEJ,EAAAA,gBAAF;AAAoBD,EAAAA;AAApB,CAAD,KAA6C;AAAA;;AAC3D,QAAM,CAACM,eAAD,EAAkBC,cAAlB,IAAoCX,QAAQ,CAAC;AAAEY,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAlD;AAEA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,eAA5B;;AACA,QAAMI,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACrCA,IAAAA,KAAK,CAACC,cAAN;AAEAX,IAAAA,gBAAgB,CAACO,KAAD,EAAQC,QAAR,CAAhB;AACA,GAJD;;AAMA,QAAMI,YAAY,GAAIF,KAAD,IAAW;AAC/B,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBJ,KAAK,CAACK,MAA9B;AAEAT,IAAAA,cAAc,CAAC,EAAE,GAAGD,eAAL;AAAsB,OAACS,IAAD,GAAQD;AAA9B,KAAD,CAAd;AACA,GAJD;;AAMA,sBACC,QAAC,eAAD;AAAA,4BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACC,QAAC,SAAD;AACC,QAAA,IAAI,EAAC,OADN;AAEC,QAAA,IAAI,EAAC,OAFN;AAGC,QAAA,YAAY,EAAEG,YAHf;AAIC,QAAA,KAAK,EAAEL,KAJR;AAKC,QAAA,KAAK,EAAC,OALP;AAMC,QAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA,cADD,eASC,QAAC,SAAD;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,IAAI,EAAC,UAFN;AAGC,QAAA,KAAK,EAAEC,QAHR;AAIC,QAAA,YAAY,EAAEI,YAJf;AAKC,QAAA,KAAK,EAAC,UALP;AAMC,QAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA,cATD,eAiBC,QAAC,mBAAD;AAAA,gCACC,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAEb,iBAArC;AAAwD,UAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA+BA,CA/CD;;GAAMK,M;;KAAAA,M;;AAiDN,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACzClB,EAAAA,iBAAiB,EAAE,MAAMkB,QAAQ,CAAClB,iBAAiB,EAAlB,CADQ;AAEzCC,EAAAA,gBAAgB,EAAE,CAACO,KAAD,EAAQC,QAAR,KAAqBS,QAAQ,CAACjB,gBAAgB,CAAC;AAAEO,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAFN,CAAf,CAA3B;;AAKA,eAAeZ,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n\tconst [userCredentials, setCredentials] = useState({ email: '', password: '' });\n\n\tconst { email, password } = userCredentials;\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\temailSignInStart(email, password);\n\t};\n\n\tconst handleChange = (event) => {\n\t\tconst { value, name } = event.target;\n\n\t\tsetCredentials({ ...userCredentials, [name]: value });\n\t};\n\n\treturn (\n\t\t<SignInContainer>\n\t\t\t<SignInTitle>I already have an account</SignInTitle>\n\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tlabel=\"email\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<ButtonsBarContainer>\n\t\t\t\t\t<CustomButton type=\"submit\"> Sign in </CustomButton>\n\t\t\t\t\t<CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\n\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</ButtonsBarContainer>\n\t\t\t</form>\n\t\t</SignInContainer>\n\t);\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}
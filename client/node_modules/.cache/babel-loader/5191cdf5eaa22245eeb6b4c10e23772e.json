{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/T7/Software Development/Work/React Course/E-commerce/e-commerce/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(SignInContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          handleChange: this.handleChange,\n          value: this.state.email,\n          label: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \" Sign in \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Volumes/T7/Software Development/Work/React Course/E-commerce/e-commerce/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nclass SignIn extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t};\n\t}\n\n\thandleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst { emailSignInStart } = this.props;\n\t\tconst { email, password } = this.state;\n\n\t\temailSignInStart(email, password);\n\t};\n\n\thandleChange = (event) => {\n\t\tconst { value, name } = event.target;\n\n\t\tthis.setState({ [name]: value });\n\t};\n\n\trender() {\n\t\tconst { googleSignInStart } = this.props;\n\t\treturn (\n\t\t\t<SignInContainer>\n\t\t\t\t<SignInTitle>I already have an account</SignInTitle>\n\t\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\tlabel=\"email\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonsBarContainer>\n\t\t\t\t\t\t<CustomButton type=\"submit\"> Sign in </CustomButton>\n\t\t\t\t\t\t<CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\n\t\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t</ButtonsBarContainer>\n\t\t\t\t</form>\n\t\t\t</SignInContainer>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}
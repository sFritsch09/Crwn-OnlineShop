{"ast":null,"code":"import CartActionTypes from './cart.types';\nimport CardActionTypes from './cart.types';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CardActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CardActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Volumes/T7/Software Development/Work/React Course/E-commerce/e-commerce/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","CardActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,MAAM,EAAE,IADa;AAErBC,EAAAA,SAAS,EAAE;AAFU,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKT,eAAe,CAACU,kBAArB;AACC,aAAO,EACN,GAAGH,KADG;AAENH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFT,OAAP;;AAID,SAAKJ,eAAe,CAACW,QAArB;AACC,aAAO,EACN,GAAGJ,KADG;AAENF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFlB,OAAP;;AAID,SAAKb,eAAe,CAACc,oBAArB;AACC,aAAO,EACN,GAAGN,KADG;AAENF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CAAwBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EAApE;AAFL,OAAP;;AAID,SAAKjB,eAAe,CAACkB,WAArB;AACC,aAAO,EACN,GAAGV,KADG;AAENF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFvB,OAAP;;AAID;AACC,aAAOL,KAAP;AAtBF;AAwBA,CAzBD;;AA2BA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\nimport CardActionTypes from './cart.types';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\n\nconst INITIAL_STATE = {\n\thidden: true,\n\tcartItems: [],\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase CardActionTypes.TOGGLE_CART_HIDDEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thidden: !state.hidden,\n\t\t\t};\n\t\tcase CardActionTypes.ADD_ITEM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: addItemToCart(state.cartItems, action.payload),\n\t\t\t};\n\t\tcase CartActionTypes.CLEAR_ITEM_FROM_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: state.cartItems.filter((cartItem) => cartItem.id !== action.payload.id),\n\t\t\t};\n\t\tcase CartActionTypes.REMOVE_ITEM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: removeItemFromCart(state.cartItems, action.payload),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}